// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrdersManager.Database;

#nullable disable

namespace OrdersManager.Database.Migrations
{
    [DbContext(typeof(OrdersManagerDbContext))]
    partial class OrdersManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrdersManager.Domain.Models.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Mark")
                        .HasColumnType("integer");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2afd95c0-06f6-4a4f-9395-20f17a1e6214"),
                            Comment = "Good",
                            Mark = 5,
                            OrderId = new Guid("dd3511a8-4397-45e8-8188-ea572f9c6baf")
                        });
                });

            modelBuilder.Entity("OrdersManager.Domain.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd3511a8-4397-45e8-8188-ea572f9c6baf"),
                            ClientId = new Guid("e62c8c60-2128-4f50-ae7d-a36876ad2811"),
                            ScheduleId = new Guid("11ae77ab-8cbd-407b-bf00-ff761ba9e9f7")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
